{"version":3,"file":"qqmap-wx-jssdk.js","sources":["libs/qqmap-wx-jssdk.js"],"sourcesContent":["/**\r\n * 微信小程序JavaScriptSDK\r\n * \r\n * @version 1.2\r\n * @date 2019-03-06\r\n */\r\n\r\nvar ERROR_CONF = {\r\n    KEY_ERR: 311,\r\n    KEY_ERR_MSG: 'key格式错误',\r\n    PARAM_ERR: 310,\r\n    PARAM_ERR_MSG: '请求参数信息有误',\r\n    SYSTEM_ERR: 600,\r\n    SYSTEM_ERR_MSG: '系统错误',\r\n    WX_ERR_CODE: 1000,\r\n    WX_OK_CODE: 200\r\n};\r\nvar BASE_URL = 'https://apis.map.qq.com/ws/';\r\nvar URL_SEARCH = BASE_URL + 'place/v1/search';\r\nvar URL_SUGGESTION = BASE_URL + 'place/v1/suggestion';\r\nvar URL_GET_GEOCODER = BASE_URL + 'geocoder/v1/';\r\nvar URL_CITY_LIST = BASE_URL + 'district/v1/list';\r\nvar URL_AREA_LIST = BASE_URL + 'district/v1/getchildren';\r\nvar URL_DISTANCE = BASE_URL + 'distance/v1/';\r\nvar URL_DIRECTION = BASE_URL + 'direction/v1/';\r\nvar MODE = {\r\n  driving: 'driving',\r\n  transit: 'transit'\r\n};\r\nvar EARTH_RADIUS = 6378136.49;\r\nvar Utils = {\r\n  /**\r\n  * md5加密方法\r\n  * 版权所有©2011 Sebastian Tschan，https：//blueimp.net\r\n  */\r\n  safeAdd(x, y) {\r\n    var lsw = (x & 0xffff) + (y & 0xffff);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xffff);\r\n  },\r\n  bitRotateLeft(num, cnt) {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n  },\r\n  md5cmn(q, a, b, x, s, t) {\r\n    return this.safeAdd(this.bitRotateLeft(this.safeAdd(this.safeAdd(a, q), this.safeAdd(x, t)), s), b);\r\n  },\r\n  md5ff(a, b, c, d, x, s, t) {\r\n    return this.md5cmn((b & c) | (~b & d), a, b, x, s, t);\r\n  },\r\n  md5gg(a, b, c, d, x, s, t) {\r\n    return this.md5cmn((b & d) | (c & ~d), a, b, x, s, t);\r\n  },\r\n  md5hh(a, b, c, d, x, s, t) {\r\n    return this.md5cmn(b ^ c ^ d, a, b, x, s, t);\r\n  },\r\n  md5ii(a, b, c, d, x, s, t) {\r\n    return this.md5cmn(c ^ (b | ~d), a, b, x, s, t);\r\n  },\r\n  binlMD5(x, len) {\r\n    /* append padding */\r\n    x[len >> 5] |= 0x80 << (len % 32);\r\n    x[((len + 64) >>> 9 << 4) + 14] = len;\r\n\r\n    var i;\r\n    var olda;\r\n    var oldb;\r\n    var oldc;\r\n    var oldd;\r\n    var a = 1732584193;\r\n    var b = -271733879;\r\n    var c = -1732584194;\r\n    var d = 271733878;\r\n\r\n    for (i = 0; i < x.length; i += 16) {\r\n      olda = a;\r\n      oldb = b;\r\n      oldc = c;\r\n      oldd = d;\r\n\r\n      a = this.md5ff(a, b, c, d, x[i], 7, -680876936);\r\n      d = this.md5ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n      c = this.md5ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n      b = this.md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n      a = this.md5ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n      d = this.md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n      c = this.md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n      b = this.md5ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n      a = this.md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n      d = this.md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n      c = this.md5ff(c, d, a, b, x[i + 10], 17, -42063);\r\n      b = this.md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n      a = this.md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n      d = this.md5ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n      c = this.md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n      b = this.md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n\r\n      a = this.md5gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n      d = this.md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n      c = this.md5gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n      b = this.md5gg(b, c, d, a, x[i], 20, -373897302);\r\n      a = this.md5gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n      d = this.md5gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n      c = this.md5gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n      b = this.md5gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n      a = this.md5gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n      d = this.md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n      c = this.md5gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n      b = this.md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n      a = this.md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n      d = this.md5gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n      c = this.md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n      b = this.md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n      a = this.md5hh(a, b, c, d, x[i + 5], 4, -378558);\r\n      d = this.md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n      c = this.md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n      b = this.md5hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n      a = this.md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n      d = this.md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n      c = this.md5hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n      b = this.md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n      a = this.md5hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n      d = this.md5hh(d, a, b, c, x[i], 11, -358537222);\r\n      c = this.md5hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n      b = this.md5hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n      a = this.md5hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n      d = this.md5hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n      c = this.md5hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n      b = this.md5hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n\r\n      a = this.md5ii(a, b, c, d, x[i], 6, -198630844);\r\n      d = this.md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n      c = this.md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n      b = this.md5ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n      a = this.md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n      d = this.md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n      c = this.md5ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n      b = this.md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n      a = this.md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n      d = this.md5ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n      c = this.md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n      b = this.md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n      a = this.md5ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n      d = this.md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n      c = this.md5ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n      b = this.md5ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n\r\n      a = this.safeAdd(a, olda);\r\n      b = this.safeAdd(b, oldb);\r\n      c = this.safeAdd(c, oldc);\r\n      d = this.safeAdd(d, oldd);\r\n    }\r\n    return [a, b, c, d];\r\n  },\r\n  binl2rstr(input) {\r\n    var i;\r\n    var output = '';\r\n    var length32 = input.length * 32;\r\n    for (i = 0; i < length32; i += 8) {\r\n      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff);\r\n    }\r\n    return output;\r\n  },\r\n  rstr2binl(input) {\r\n    var i;\r\n    var output = [];\r\n    output[(input.length >> 2) - 1] = undefined;\r\n    for (i = 0; i < output.length; i += 1) {\r\n      output[i] = 0;\r\n    }\r\n    var length8 = input.length * 8;\r\n    for (i = 0; i < length8; i += 8) {\r\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32);\r\n    }\r\n    return output;\r\n  },\r\n  rstrMD5(s) {\r\n    return this.binl2rstr(this.binlMD5(this.rstr2binl(s), s.length * 8));\r\n  },\r\n  rstrHMACMD5(key, data) {\r\n    var i;\r\n    var bkey = this.rstr2binl(key);\r\n    var ipad = [];\r\n    var opad = [];\r\n    var hash;\r\n    ipad[15] = opad[15] = undefined;\r\n    if (bkey.length > 16) {\r\n      bkey = this.binlMD5(bkey, key.length * 8);\r\n    }\r\n    for (i = 0; i < 16; i += 1) {\r\n      ipad[i] = bkey[i] ^ 0x36363636;\r\n      opad[i] = bkey[i] ^ 0x5c5c5c5c;\r\n    }\r\n    hash = this.binlMD5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\r\n    return this.binl2rstr(this.binlMD5(opad.concat(hash), 512 + 128));\r\n  },\r\n  rstr2hex(input) {\r\n    var hexTab = '0123456789abcdef';\r\n    var output = '';\r\n    var x;\r\n    var i;\r\n    for (i = 0; i < input.length; i += 1) {\r\n      x = input.charCodeAt(i);\r\n      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\r\n    }\r\n    return output;\r\n  },\r\n  str2rstrUTF8(input) {\r\n    return unescape(encodeURIComponent(input));\r\n  },\r\n  rawMD5(s) {\r\n    return this.rstrMD5(this.str2rstrUTF8(s));\r\n  },\r\n  hexMD5(s) {\r\n    return this.rstr2hex(this.rawMD5(s));\r\n  },\r\n  rawHMACMD5(k, d) {\r\n    return this.rstrHMACMD5(this.str2rstrUTF8(k), str2rstrUTF8(d));\r\n  },\r\n  hexHMACMD5(k, d) {\r\n    return this.rstr2hex(this.rawHMACMD5(k, d));\r\n  },\r\n\r\n  md5(string, key, raw) {\r\n    if (!key) {\r\n      if (!raw) {\r\n        return this.hexMD5(string);\r\n      }\r\n      return this.rawMD5(string);\r\n    }\r\n    if (!raw) {\r\n      return this.hexHMACMD5(key, string);\r\n    }\r\n    return this.rawHMACMD5(key, string);\r\n  },\r\n  /**\r\n   * 得到md5加密后的sig参数\r\n   * @param {Object} requestParam 接口参数\r\n   * @param {String} sk签名字符串\r\n   * @param {String} featrue 方法名\r\n   * @return 返回加密后的sig参数\r\n   */\r\n  getSig(requestParam, sk, feature, mode) {\r\n    var sig = null;\r\n    var requestArr = [];\r\n    Object.keys(requestParam).sort().forEach(function(key){\r\n      requestArr.push(key + '=' + requestParam[key]);\r\n    });\r\n    if (feature == 'search') {\r\n      sig = '/ws/place/v1/search?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'suggest') {\r\n      sig = '/ws/place/v1/suggestion?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'reverseGeocoder') {\r\n      sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'geocoder') {\r\n      sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'getCityList') {\r\n      sig = '/ws/district/v1/list?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'getDistrictByCityId') {\r\n      sig = '/ws/district/v1/getchildren?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'calculateDistance') {\r\n      sig = '/ws/distance/v1/?' + requestArr.join('&') + sk;\r\n    }\r\n    if (feature == 'direction') {\r\n      sig = '/ws/direction/v1/' + mode + '?' + requestArr.join('&') + sk;\r\n    }\r\n    sig = this.md5(sig);\r\n    return sig;\r\n  },\r\n    /**\r\n     * 得到终点query字符串\r\n     * @param {Array|String} 检索数据\r\n     */\r\n    location2query(data) {\r\n        if (typeof data == 'string') {\r\n            return data;\r\n        }\r\n        var query = '';\r\n        for (var i = 0; i < data.length; i++) {\r\n            var d = data[i];\r\n            if (!!query) {\r\n                query += ';';\r\n            }\r\n            if (d.location) {\r\n                query = query + d.location.lat + ',' + d.location.lng;\r\n            }\r\n            if (d.latitude && d.longitude) {\r\n                query = query + d.latitude + ',' + d.longitude;\r\n            }\r\n        }\r\n        return query;\r\n    },\r\n\r\n    /**\r\n     * 计算角度\r\n     */\r\n    rad(d) {\r\n      return d * Math.PI / 180.0;\r\n    },  \r\n    /**\r\n     * 处理终点location数组\r\n     * @return 返回终点数组\r\n     */\r\n    getEndLocation(location){\r\n      var to = location.split(';');\r\n      var endLocation = [];\r\n      for (var i = 0; i < to.length; i++) {\r\n        endLocation.push({\r\n          lat: parseFloat(to[i].split(',')[0]),\r\n          lng: parseFloat(to[i].split(',')[1])\r\n        })\r\n      }\r\n      return endLocation;\r\n    },\r\n\r\n    /**\r\n     * 计算两点间直线距离\r\n     * @param a 表示纬度差\r\n     * @param b 表示经度差\r\n     * @return 返回的是距离，单位m\r\n     */\r\n    getDistance(latFrom, lngFrom, latTo, lngTo) {\r\n      var radLatFrom = this.rad(latFrom);\r\n      var radLatTo = this.rad(latTo);\r\n      var a = radLatFrom - radLatTo;\r\n      var b = this.rad(lngFrom) - this.rad(lngTo);\r\n      var distance = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLatFrom) * Math.cos(radLatTo) * Math.pow(Math.sin(b / 2), 2)));\r\n      distance = distance * EARTH_RADIUS;\r\n      distance = Math.round(distance * 10000) / 10000;\r\n      return parseFloat(distance.toFixed(0));\r\n    },\r\n    /**\r\n     * 使用微信接口进行定位\r\n     */\r\n    getWXLocation(success, fail, complete) {\r\n        wx.getLocation({\r\n            type: 'gcj02',\r\n            success: success,\r\n            fail: fail,\r\n            complete: complete\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 获取location参数\r\n     */\r\n    getLocationParam(location) {\r\n        if (typeof location == 'string') {\r\n            var locationArr = location.split(',');\r\n            if (locationArr.length === 2) {\r\n                location = {\r\n                    latitude: location.split(',')[0],\r\n                    longitude: location.split(',')[1]\r\n                };\r\n            } else {\r\n                location = {};\r\n            }\r\n        }\r\n        return location;\r\n    },\r\n\r\n    /**\r\n     * 回调函数默认处理\r\n     */\r\n    polyfillParam(param) {\r\n        param.success = param.success || function () { };\r\n        param.fail = param.fail || function () { };\r\n        param.complete = param.complete || function () { };\r\n    },\r\n\r\n    /**\r\n     * 验证param对应的key值是否为空\r\n     * \r\n     * @param {Object} param 接口参数\r\n     * @param {String} key 对应参数的key\r\n     */\r\n    checkParamKeyEmpty(param, key) {\r\n        if (!param[key]) {\r\n            var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + key +'参数格式有误');\r\n            param.fail(errconf);\r\n            param.complete(errconf);\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * 验证参数中是否存在检索词keyword\r\n     * \r\n     * @param {Object} param 接口参数\r\n     */\r\n    checkKeyword(param){\r\n        return !this.checkParamKeyEmpty(param, 'keyword');\r\n    },\r\n\r\n    /**\r\n     * 验证location值\r\n     * \r\n     * @param {Object} param 接口参数\r\n     */\r\n    checkLocation(param) {\r\n        var location = this.getLocationParam(param.location);\r\n        if (!location || !location.latitude || !location.longitude) {\r\n            var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + ' location参数格式有误');\r\n            param.fail(errconf);\r\n            param.complete(errconf);\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * 构造错误数据结构\r\n     * @param {Number} errCode 错误码\r\n     * @param {Number} errMsg 错误描述\r\n     */\r\n    buildErrorConfig(errCode, errMsg) {\r\n        return {\r\n            status: errCode,\r\n            message: errMsg\r\n        };\r\n    },\r\n\r\n    /**\r\n     * \r\n     * 数据处理函数\r\n     * 根据传入参数不同处理不同数据\r\n     * @param {String} feature 功能名称\r\n     * search 地点搜索\r\n     * suggest关键词提示\r\n     * reverseGeocoder逆地址解析\r\n     * geocoder地址解析\r\n     * getCityList获取城市列表：父集\r\n     * getDistrictByCityId获取区县列表：子集\r\n     * calculateDistance距离计算\r\n     * @param {Object} param 接口参数\r\n     * @param {Object} data 数据\r\n     */\r\n    handleData(param,data,feature){\r\n      if (feature == 'search') {\r\n        var searchResult = data.data;\r\n        var searchSimplify = [];\r\n        for (var i = 0; i < searchResult.length; i++) {\r\n          searchSimplify.push({\r\n            id: searchResult[i].id || null,\r\n            title: searchResult[i].title || null,\r\n            latitude: searchResult[i].location && searchResult[i].location.lat || null,\r\n            longitude: searchResult[i].location && searchResult[i].location.lng || null,\r\n            address: searchResult[i].address || null,\r\n            category: searchResult[i].category || null,\r\n            tel: searchResult[i].tel || null,\r\n            adcode: searchResult[i].ad_info && searchResult[i].ad_info.adcode || null,\r\n            city: searchResult[i].ad_info && searchResult[i].ad_info.city || null,\r\n            district: searchResult[i].ad_info && searchResult[i].ad_info.district || null,\r\n            province: searchResult[i].ad_info && searchResult[i].ad_info.province || null\r\n          })\r\n        }\r\n        param.success(data, {\r\n          searchResult: searchResult,\r\n          searchSimplify: searchSimplify\r\n        })\r\n      } else if (feature == 'suggest') {\r\n        var suggestResult = data.data;\r\n        var suggestSimplify = [];\r\n        for (var i = 0; i < suggestResult.length; i++) {\r\n          suggestSimplify.push({\r\n            adcode: suggestResult[i].adcode || null,\r\n            address: suggestResult[i].address || null,\r\n            category: suggestResult[i].category || null,\r\n            city: suggestResult[i].city || null,\r\n            district: suggestResult[i].district || null,\r\n            id: suggestResult[i].id || null,\r\n            latitude: suggestResult[i].location && suggestResult[i].location.lat || null,\r\n            longitude: suggestResult[i].location && suggestResult[i].location.lng || null,\r\n            province: suggestResult[i].province || null,\r\n            title: suggestResult[i].title || null,\r\n            type: suggestResult[i].type || null\r\n          })\r\n        }\r\n        param.success(data, {\r\n          suggestResult: suggestResult,\r\n          suggestSimplify: suggestSimplify\r\n          })\r\n      } else if (feature == 'reverseGeocoder') {\r\n        var reverseGeocoderResult = data.result;\r\n        var reverseGeocoderSimplify = {\r\n          address: reverseGeocoderResult.address || null,\r\n          latitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lat || null,\r\n          longitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lng || null,\r\n          adcode: reverseGeocoderResult.ad_info && reverseGeocoderResult.ad_info.adcode || null,\r\n          city: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.city || null,\r\n          district: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.district || null,\r\n          nation: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.nation || null,\r\n          province: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.province || null,\r\n          street: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street || null,\r\n          street_number: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street_number || null,\r\n          recommend: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.recommend || null,\r\n          rough: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.rough || null\r\n        };\r\n        if (reverseGeocoderResult.pois) {//判断是否返回周边poi\r\n          var pois = reverseGeocoderResult.pois;\r\n          var poisSimplify = [];\r\n          for (var i = 0;i < pois.length;i++) {\r\n            poisSimplify.push({\r\n              id: pois[i].id || null,\r\n              title: pois[i].title || null,\r\n              latitude: pois[i].location && pois[i].location.lat || null,\r\n              longitude: pois[i].location && pois[i].location.lng || null,\r\n              address: pois[i].address || null,\r\n              category: pois[i].category || null,\r\n              adcode: pois[i].ad_info && pois[i].ad_info.adcode || null,\r\n              city: pois[i].ad_info && pois[i].ad_info.city || null,\r\n              district: pois[i].ad_info && pois[i].ad_info.district || null,\r\n              province: pois[i].ad_info && pois[i].ad_info.province || null\r\n            })\r\n          }\r\n          param.success(data,{\r\n            reverseGeocoderResult: reverseGeocoderResult,\r\n            reverseGeocoderSimplify: reverseGeocoderSimplify,\r\n            pois: pois,\r\n            poisSimplify: poisSimplify\r\n          })\r\n        } else {\r\n          param.success(data, {\r\n            reverseGeocoderResult: reverseGeocoderResult,\r\n            reverseGeocoderSimplify: reverseGeocoderSimplify\r\n          })\r\n        }\r\n      } else if (feature == 'geocoder') {\r\n        var geocoderResult = data.result;\r\n        var geocoderSimplify = {\r\n          title: geocoderResult.title || null,\r\n          latitude: geocoderResult.location && geocoderResult.location.lat || null,\r\n          longitude: geocoderResult.location && geocoderResult.location.lng || null,\r\n          adcode: geocoderResult.ad_info && geocoderResult.ad_info.adcode || null,\r\n          province: geocoderResult.address_components && geocoderResult.address_components.province || null,\r\n          city: geocoderResult.address_components && geocoderResult.address_components.city || null,\r\n          district: geocoderResult.address_components && geocoderResult.address_components.district || null,\r\n          street: geocoderResult.address_components && geocoderResult.address_components.street || null,\r\n          street_number: geocoderResult.address_components && geocoderResult.address_components.street_number || null,\r\n          level: geocoderResult.level || null\r\n        };\r\n        param.success(data,{\r\n          geocoderResult: geocoderResult,\r\n          geocoderSimplify: geocoderSimplify\r\n        });\r\n      } else if (feature == 'getCityList') {\r\n        var provinceResult = data.result[0];\r\n        var cityResult = data.result[1];\r\n        var districtResult = data.result[2];\r\n        param.success(data,{\r\n          provinceResult: provinceResult,\r\n          cityResult: cityResult,\r\n          districtResult: districtResult\r\n        });\r\n      } else if (feature == 'getDistrictByCityId') {\r\n        var districtByCity = data.result[0];\r\n        param.success(data, districtByCity);\r\n      } else if (feature == 'calculateDistance') {\r\n        var calculateDistanceResult = data.result.elements;  \r\n        var distance = [];\r\n        for (var i = 0; i < calculateDistanceResult.length; i++){\r\n          distance.push(calculateDistanceResult[i].distance);\r\n        }   \r\n        param.success(data, {\r\n          calculateDistanceResult: calculateDistanceResult,\r\n          distance: distance\r\n          });\r\n      } else if (feature == 'direction') {\r\n        var direction = data.result.routes;\r\n        param.success(data,direction);\r\n      } else {\r\n        param.success(data);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 构造微信请求参数，公共属性处理\r\n     * \r\n     * @param {Object} param 接口参数\r\n     * @param {Object} param 配置项\r\n     * @param {String} feature 方法名\r\n     */\r\n    buildWxRequestConfig(param, options, feature) {\r\n        var that = this;\r\n        options.header = { \"content-type\": \"application/json\" };\r\n        options.method = 'GET';\r\n        options.success = function (res) {\r\n            var data = res.data;\r\n            if (data.status === 0) {\r\n              that.handleData(param, data, feature);\r\n            } else {\r\n                param.fail(data);\r\n            }\r\n        };\r\n        options.fail = function (res) {\r\n            res.statusCode = ERROR_CONF.WX_ERR_CODE;\r\n            param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));\r\n        };\r\n        options.complete = function (res) {\r\n            var statusCode = +res.statusCode;\r\n            switch(statusCode) {\r\n                case ERROR_CONF.WX_ERR_CODE: {\r\n                    param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));\r\n                    break;\r\n                }\r\n                case ERROR_CONF.WX_OK_CODE: {\r\n                    var data = res.data;\r\n                    if (data.status === 0) {\r\n                        param.complete(data);\r\n                    } else {\r\n                        param.complete(that.buildErrorConfig(data.status, data.message));\r\n                    }\r\n                    break;\r\n                }\r\n                default:{\r\n                    param.complete(that.buildErrorConfig(ERROR_CONF.SYSTEM_ERR, ERROR_CONF.SYSTEM_ERR_MSG));\r\n                }\r\n\r\n            }\r\n        };\r\n        return options;\r\n    },\r\n\r\n    /**\r\n     * 处理用户参数是否传入坐标进行不同的处理\r\n     */\r\n    locationProcess(param, locationsuccess, locationfail, locationcomplete) {\r\n        var that = this;\r\n        locationfail = locationfail || function (res) {\r\n            res.statusCode = ERROR_CONF.WX_ERR_CODE;\r\n            param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));\r\n        };\r\n        locationcomplete = locationcomplete || function (res) {\r\n            if (res.statusCode == ERROR_CONF.WX_ERR_CODE) {\r\n                param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));\r\n            }\r\n        };\r\n        if (!param.location) {\r\n            that.getWXLocation(locationsuccess, locationfail, locationcomplete);\r\n        } else if (that.checkLocation(param)) {\r\n            var location = Utils.getLocationParam(param.location);\r\n            locationsuccess(location);\r\n        }\r\n    }\r\n};\r\n\r\n class QQMapWX {\r\n\r\n    /**\r\n     * 构造函数\r\n     * \r\n     * @param {Object} options 接口参数,key 为必选参数\r\n     */\r\n    constructor(options) {\r\n        if (!options.key) {\r\n            throw Error('key值不能为空');\r\n        }\r\n        this.key = options.key;\r\n    };\r\n\r\n    /**\r\n     * POI周边检索\r\n     *\r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 参数对象结构可以参考\r\n     * @see http://lbs.qq.com/webservice_v1/guide-search.html\r\n     */\r\n    search(options) {\r\n        var that = this;\r\n        options = options || {};\r\n\r\n        Utils.polyfillParam(options);\r\n\r\n        if (!Utils.checkKeyword(options)) {\r\n            return;\r\n        }\r\n\r\n        var requestParam = {\r\n            keyword: options.keyword,\r\n            orderby: options.orderby || '_distance',\r\n            page_size: options.page_size || 10,\r\n            page_index: options.page_index || 1,\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n\r\n        if (options.address_format) {\r\n            requestParam.address_format = options.address_format;\r\n        }\r\n\r\n        if (options.filter) {\r\n            requestParam.filter = options.filter;\r\n        }\r\n\r\n        var distance = options.distance || \"1000\";\r\n        var auto_extend = options.auto_extend || 1;\r\n        var region = null;\r\n        var rectangle = null;\r\n\r\n        //判断城市限定参数\r\n        if (options.region) {\r\n          region = options.region;\r\n        }\r\n\r\n        //矩形限定坐标(暂时只支持字符串格式)\r\n        if (options.rectangle) {\r\n          rectangle = options.rectangle;\r\n        }\r\n\r\n        var locationsuccess = function (result) {        \r\n          if (region && !rectangle) {\r\n            //城市限定参数拼接\r\n            requestParam.boundary = \"region(\" + region + \",\" + auto_extend + \",\" + result.latitude + \",\" + result.longitude + \")\";\r\n            if (options.sig) {\r\n              requestParam.sig = Utils.getSig(requestParam, options.sig, 'search');\r\n            }\r\n          } else if (rectangle && !region) {\r\n            //矩形搜索\r\n            requestParam.boundary = \"rectangle(\" + rectangle + \")\";\r\n            if (options.sig) {\r\n              requestParam.sig = Utils.getSig(requestParam, options.sig, 'search');\r\n            }\r\n            } else {\r\n              requestParam.boundary = \"nearby(\" + result.latitude + \",\" + result.longitude + \",\" + distance + \",\" + auto_extend + \")\";\r\n            if (options.sig) {\r\n              requestParam.sig = Utils.getSig(requestParam, options.sig, 'search');\r\n            }\r\n            }            \r\n            wx.request(Utils.buildWxRequestConfig(options, {\r\n                url: URL_SEARCH,\r\n                data: requestParam\r\n            }, 'search'));\r\n        };\r\n        Utils.locationProcess(options, locationsuccess);\r\n    };\r\n\r\n    /**\r\n     * sug模糊检索\r\n     *\r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 参数对象结构可以参考\r\n     * http://lbs.qq.com/webservice_v1/guide-suggestion.html\r\n     */\r\n    getSuggestion(options) {\r\n        var that = this;\r\n        options = options || {};\r\n        Utils.polyfillParam(options);\r\n\r\n        if (!Utils.checkKeyword(options)) {\r\n            return;\r\n        }\r\n\r\n        var requestParam = {\r\n            keyword: options.keyword,\r\n            region: options.region || '全国',\r\n            region_fix: options.region_fix || 0,\r\n            policy: options.policy || 0,\r\n            page_size: options.page_size || 10,//控制显示条数\r\n            page_index: options.page_index || 1,//控制页数\r\n            get_subpois : options.get_subpois || 0,//返回子地点\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n        //长地址\r\n        if (options.address_format) {\r\n          requestParam.address_format = options.address_format;\r\n        }\r\n        //过滤\r\n        if (options.filter) {\r\n          requestParam.filter = options.filter;\r\n        }\r\n        //排序\r\n        if (options.location) {\r\n          var locationsuccess = function (result) {\r\n            requestParam.location = result.latitude + ',' + result.longitude;\r\n            if (options.sig) {\r\n              requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest');\r\n            }\r\n            wx.request(Utils.buildWxRequestConfig(options, {\r\n              url: URL_SUGGESTION,\r\n              data: requestParam\r\n            }, \"suggest\"));      \r\n          };\r\n          Utils.locationProcess(options, locationsuccess);\r\n        } else {\r\n          if (options.sig) {\r\n            requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest');\r\n          }\r\n          wx.request(Utils.buildWxRequestConfig(options, {\r\n            url: URL_SUGGESTION,\r\n            data: requestParam\r\n          }, \"suggest\"));      \r\n        }        \r\n    };\r\n\r\n    /**\r\n     * 逆地址解析\r\n     *\r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 请求参数结构可以参考\r\n     * http://lbs.qq.com/webservice_v1/guide-gcoder.html\r\n     */\r\n    reverseGeocoder(options) {\r\n        var that = this;\r\n        options = options || {};\r\n        Utils.polyfillParam(options);\r\n        var requestParam = {\r\n            coord_type: options.coord_type || 5,\r\n            get_poi: options.get_poi || 0,\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n        if (options.poi_options) {\r\n            requestParam.poi_options = options.poi_options\r\n        }\r\n\r\n        var locationsuccess = function (result) {\r\n            requestParam.location = result.latitude + ',' + result.longitude;\r\n          if (options.sig) {\r\n            requestParam.sig = Utils.getSig(requestParam, options.sig, 'reverseGeocoder');\r\n          }\r\n            wx.request(Utils.buildWxRequestConfig(options, {\r\n                url: URL_GET_GEOCODER,\r\n                data: requestParam\r\n            }, 'reverseGeocoder'));\r\n        };\r\n        Utils.locationProcess(options, locationsuccess);\r\n    };\r\n\r\n    /**\r\n     * 地址解析\r\n     *\r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 请求参数结构可以参考\r\n     * http://lbs.qq.com/webservice_v1/guide-geocoder.html\r\n     */\r\n    geocoder(options) {\r\n        var that = this;\r\n        options = options || {};\r\n        Utils.polyfillParam(options);\r\n\r\n        if (Utils.checkParamKeyEmpty(options, 'address')) {\r\n            return;\r\n        }\r\n\r\n        var requestParam = {\r\n            address: options.address,\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n\r\n        //城市限定\r\n        if (options.region) {\r\n          requestParam.region = options.region;\r\n        }\r\n\r\n        if (options.sig) {\r\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'geocoder');\r\n        }\r\n\r\n        wx.request(Utils.buildWxRequestConfig(options, {\r\n            url: URL_GET_GEOCODER,\r\n            data: requestParam\r\n        },'geocoder'));\r\n    };\r\n\r\n\r\n    /**\r\n     * 获取城市列表\r\n     *\r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 请求参数结构可以参考\r\n     * http://lbs.qq.com/webservice_v1/guide-region.html\r\n     */\r\n    getCityList(options) {\r\n        var that = this;\r\n        options = options || {};\r\n        Utils.polyfillParam(options);\r\n        var requestParam = {\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n\r\n        if (options.sig) {\r\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'getCityList');\r\n        }\r\n\r\n        wx.request(Utils.buildWxRequestConfig(options, {\r\n            url: URL_CITY_LIST,\r\n            data: requestParam\r\n        },'getCityList'));\r\n    };\r\n\r\n    /**\r\n     * 获取对应城市ID的区县列表\r\n     *\r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 请求参数结构可以参考\r\n     * http://lbs.qq.com/webservice_v1/guide-region.html\r\n     */\r\n    getDistrictByCityId(options) {\r\n        var that = this;\r\n        options = options || {};\r\n        Utils.polyfillParam(options);\r\n\r\n        if (Utils.checkParamKeyEmpty(options, 'id')) {\r\n            return;\r\n        }\r\n\r\n        var requestParam = {\r\n            id: options.id || '',\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n\r\n        if (options.sig) {\r\n          requestParam.sig = Utils.getSig(requestParam, options.sig, 'getDistrictByCityId');\r\n        }\r\n\r\n        wx.request(Utils.buildWxRequestConfig(options, {\r\n            url: URL_AREA_LIST,\r\n            data: requestParam\r\n        },'getDistrictByCityId'));\r\n    };\r\n\r\n    /**\r\n     * 用于单起点到多终点的路线距离(非直线距离)计算：\r\n     * 支持两种距离计算方式：步行和驾车。\r\n     * 起点到终点最大限制直线距离10公里。\r\n     *\r\n     * 新增直线距离计算。\r\n     * \r\n     * @param {Object} options 接口参数对象\r\n     * \r\n     * 请求参数结构可以参考\r\n     * http://lbs.qq.com/webservice_v1/guide-distance.html\r\n     */\r\n    calculateDistance(options) {\r\n        var that = this;\r\n        options = options || {};\r\n        Utils.polyfillParam(options);\r\n\r\n        if (Utils.checkParamKeyEmpty(options, 'to')) {\r\n            return;\r\n        }\r\n\r\n        var requestParam = {\r\n            mode: options.mode || 'walking',\r\n            to: Utils.location2query(options.to),\r\n            output: 'json',\r\n            key: that.key\r\n        };\r\n\r\n        if (options.from) {\r\n          options.location = options.from;\r\n        }\r\n\r\n        //计算直线距离\r\n        if(requestParam.mode == 'straight'){        \r\n          var locationsuccess = function (result) {\r\n            var locationTo = Utils.getEndLocation(requestParam.to);//处理终点坐标\r\n            var data = {\r\n              message:\"query ok\",\r\n              result:{\r\n                elements:[]\r\n              },\r\n              status:0\r\n            };\r\n            for (var i = 0; i < locationTo.length; i++) {\r\n              data.result.elements.push({//将坐标存入\r\n                distance: Utils.getDistance(result.latitude, result.longitude, locationTo[i].lat, locationTo[i].lng),\r\n                duration:0,\r\n                from:{\r\n                  lat: result.latitude,\r\n                  lng:result.longitude\r\n                },\r\n                to:{\r\n                  lat: locationTo[i].lat,\r\n                  lng: locationTo[i].lng\r\n                }\r\n              });            \r\n            }\r\n            var calculateResult = data.result.elements;\r\n            var distanceResult = [];\r\n            for (var i = 0; i < calculateResult.length; i++) {\r\n              distanceResult.push(calculateResult[i].distance);\r\n            }  \r\n            return options.success(data,{\r\n              calculateResult: calculateResult,\r\n              distanceResult: distanceResult\r\n            });\r\n          };\r\n          \r\n          Utils.locationProcess(options, locationsuccess);\r\n        } else {\r\n          var locationsuccess = function (result) {\r\n            requestParam.from = result.latitude + ',' + result.longitude;\r\n            if (options.sig) {\r\n              requestParam.sig = Utils.getSig(requestParam, options.sig, 'calculateDistance');\r\n            }\r\n            wx.request(Utils.buildWxRequestConfig(options, {\r\n              url: URL_DISTANCE,\r\n              data: requestParam\r\n            },'calculateDistance'));\r\n          };\r\n\r\n          Utils.locationProcess(options, locationsuccess);\r\n        }      \r\n    };\r\n\r\n  /**\r\n   * 路线规划：\r\n   * \r\n   * @param {Object} options 接口参数对象\r\n   * \r\n   * 请求参数结构可以参考\r\n   * https://lbs.qq.com/webservice_v1/guide-road.html\r\n   */\r\n  direction(options) {\r\n    var that = this;\r\n    options = options || {};\r\n    Utils.polyfillParam(options);\r\n\r\n    if (Utils.checkParamKeyEmpty(options, 'to')) {\r\n      return;\r\n    }\r\n\r\n    var requestParam = {\r\n      output: 'json',\r\n      key: that.key\r\n    };\r\n\r\n    //to格式处理\r\n    if (typeof options.to == 'string') {\r\n      requestParam.to = options.to;\r\n    } else {\r\n      requestParam.to = options.to.latitude + ',' + options.to.longitude;\r\n    }\r\n    //初始化局部请求域名\r\n    var SET_URL_DIRECTION = null;\r\n    //设置默认mode属性\r\n    options.mode = options.mode || MODE.driving;\r\n\r\n    //设置请求域名\r\n    SET_URL_DIRECTION = URL_DIRECTION + options.mode;\r\n\r\n    if (options.from) {\r\n      options.location = options.from;\r\n    }\r\n\r\n    if (options.mode == MODE.driving) {\r\n      if (options.from_poi) {\r\n        requestParam.from_poi = options.from_poi;\r\n      }\r\n      if (options.heading) {\r\n        requestParam.heading = options.heading;\r\n      }\r\n      if (options.speed) {\r\n        requestParam.speed = options.speed;\r\n      }\r\n      if (options.accuracy) {\r\n        requestParam.accuracy = options.accuracy;\r\n      }\r\n      if (options.road_type) {\r\n        requestParam.road_type = options.road_type;\r\n      }\r\n      if (options.to_poi) {\r\n        requestParam.to_poi = options.to_poi;\r\n      }\r\n      if (options.from_track) {\r\n        requestParam.from_track = options.from_track;\r\n      }\r\n      if (options.waypoints) {\r\n        requestParam.waypoints = options.waypoints;\r\n      }\r\n      if (options.policy) {\r\n        requestParam.policy = options.policy;\r\n      }\r\n      if (options.plate_number) {\r\n        requestParam.plate_number = options.plate_number;\r\n      }\r\n    }\r\n\r\n    if (options.mode == MODE.transit) {\r\n      if (options.departure_time) {\r\n        requestParam.departure_time = options.departure_time;\r\n      }\r\n      if (options.policy) {\r\n        requestParam.policy = options.policy;\r\n      }\r\n    } \r\n\r\n    var locationsuccess = function (result) {\r\n      requestParam.from = result.latitude + ',' + result.longitude;\r\n      if (options.sig) {\r\n        requestParam.sig = Utils.getSig(requestParam, options.sig, 'direction',options.mode);\r\n      }\r\n      wx.request(Utils.buildWxRequestConfig(options, {\r\n        url: SET_URL_DIRECTION,\r\n        data: requestParam\r\n      }, 'direction'));\r\n    };\r\n\r\n    Utils.locationProcess(options, locationsuccess);\r\n  }\r\n};\r\n\r\n// module.exports = QQMapWX;\r\nexport default QQMapWX;\r\n"],"names":["wx"],"mappings":"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"}