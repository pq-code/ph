{"version":3,"file":"useWatermark.js","sources":["pages/home/ph/addWatermark/hooks/useWatermark.js"],"sourcesContent":["import { ref } from 'vue'\nimport dayjs from 'dayjs'\n\nexport const useWatermark = (canvasId) => {\n  // 绘制中间大水印\n  const drawCenterWatermark = (ctx, imageRect) => {\n    const { x: imageX, y: imageY, drawWidth: imageWidth, drawHeight: imageHeight } = imageRect\n    \n    ctx.save()\n    \n    // 计算中心点和字体大小\n    const centerX = imageX + imageWidth / 2\n    const centerY = imageY + imageHeight / 2\n    const centerFontSize = Math.min(imageWidth, imageHeight) * 0.08\n    \n    // 移动到中心点\n    ctx.translate(centerX, centerY)\n    \n    // 设置文字样式\n    ctx.setTextAlign('center')\n    ctx.setTextBaseline('middle')\n    ctx.setFontSize(centerFontSize)\n    ctx.font = `bold ${centerFontSize}px sans-serif`\n    \n    const centerText = \"现场拍照\"\n    \n    // 绘制白色描边\n    ctx.setGlobalAlpha(0.5)\n    ctx.setLineWidth(2)\n    ctx.setStrokeStyle('#FFFFFF')\n    ctx.strokeText(centerText, 0, 0)\n    \n    // 绘制主体文字\n    ctx.setGlobalAlpha(0.5)\n    ctx.setFillStyle('#666666')\n    ctx.fillText(centerText, 0, 0)\n    \n    ctx.restore()\n  }\n  \n  // 绘制底部信息水印\n  const drawBottomWatermark = (ctx, imageRect, info) => {\n    const { x: imageX, y: imageY, drawWidth: imageWidth, drawHeight: imageHeight } = imageRect\n    \n    // 设置文字样式\n    const fontSize = 14\n    ctx.setFontSize(fontSize)\n    ctx.setTextAlign('left')\n    ctx.setTextBaseline('top')\n    \n    // 准备水印文字内容\n    const watermarkLines = [\n      `经度：${info.longitude || '121.0126'}`,\n      `纬度：${info.latitude || '31.288511'}`,\n      `坐标：WGS84坐标系`,\n      `地址：${info.address || ''}`,\n      `时间：${info.datetime  || dayjs().format('YYYY-MM-DD HH:mm:ss')}`,\n      `备注：${info.remark || '编辑备注'}`\n    ]\n    \n    // 调整行间距，设置较宽的行高，比如 fontSize * 1.5\n    const padding = 10\n    const lineHeight = fontSize * 1.5\n    const totalHeight = watermarkLines.length * lineHeight\n    let currentY = imageY + imageHeight - totalHeight - padding\n    \n    // 绘制文字\n    ctx.setGlobalAlpha(1)\n    ctx.setFillStyle('#FFFFFF')\n    \n    watermarkLines.forEach(line => {\n      ctx.fillText(line, imageX + padding * 1, currentY)\n      currentY += lineHeight\n    })\n  }\n  // 绘制标准水印\n  const drawStandardWatermark = (ctx, imageRect, info) => {\n    const { x: imageX, y: imageY, drawWidth: imageWidth, drawHeight: imageHeight } = imageRect\n    \n    // 设置文字样式（从info获取参数）\n    const fontSize = info.fontSize || 18\n    ctx.save()\n    ctx.setFontSize(fontSize)\n    ctx.setTextAlign('center')\n    ctx.setTextBaseline('middle')\n    ctx.font = `bold ${fontSize}px sans-serif`\n    \n    // 动态参数配置\n    ctx.translate(imageX + imageWidth/2, imageY + imageHeight/2)\n    ctx.rotate((info.angle || -15) * Math.PI / 180)\n    ctx.setGlobalAlpha((info.opacity ?? 30) / 100)\n\n    // 创建重复水印图案\n    const watermarkText = info.watermarkContent || '保密'\n    const spacing = info.density || 100\n    const repeatX = Math.ceil(imageWidth / spacing) + 2\n    const repeatY = Math.ceil(imageHeight / spacing) + 2\n\n    // 动态样式配置\n    ctx.strokeStyle = info.strokeColor || '#FFFFFF' // 描边颜色控制\n    ctx.lineWidth = info.strokeWidth || 2 // 描边粗细控制\n    ctx.setFillStyle(info.fillColor || '#666666') // 填充颜色控制\n\n    // 平铺绘制水印\n    for(let x = -repeatX; x <= repeatX; x++) {\n      for(let y = -repeatY; y <= repeatY; y++) {\n        ctx.strokeText(watermarkText, x * spacing, y * spacing)  // 先描边\n        ctx.fillText(watermarkText, x * spacing, y * spacing)     // 再填充\n      }\n    }\n    \n    ctx.restore()\n  }\n\n  const addWatermark = async ({ image, style, info }) => {\n    \n    if (!image?.path) {\n      console.error('无效的图片路径')\n      return\n    }\n\n    try {\n      const ctx = uni.createCanvasContext(canvasId)\n      \n      // 清空画布\n      ctx.clearRect(0, 0, image.canvasWidth, image.canvasHeight)\n      \n      // 绘制原图\n      ctx.drawImage(\n        image.path,\n        image.x,\n        image.y,\n        image.drawWidth,\n        image.drawHeight\n      )\n      \n      const imageRect = {\n        x: image.x,\n        y: image.y,\n        drawWidth: image.drawWidth,\n        drawHeight: image.drawHeight\n      }\n      \n      if (style.id === 1) {\n        // 绘制中间水印\n        if (info.isOnSitePhotography) {\n          drawCenterWatermark(ctx, imageRect)\n        }\n        // 绘制底部信息水印\n        drawBottomWatermark(ctx, imageRect, info)\n      } else if (style.id === 2) {\n        // 基础水印\n        drawStandardWatermark(ctx, imageRect, info)\n      }\n      \n      // 应用绘制\n      await new Promise(resolve => ctx.draw(false, resolve))\n      \n    } catch (error) {\n      console.error('绘制失败:', error)\n      uni.showToast({\n        title: '绘制失败',\n        icon: 'none'\n      })\n    }\n  }\n\n  return {\n    addWatermark\n  }\n}\n\n"],"names":["dayjs","uni"],"mappings":"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"}