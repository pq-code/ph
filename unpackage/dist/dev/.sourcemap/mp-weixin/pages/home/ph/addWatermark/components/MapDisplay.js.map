{"version":3,"file":"MapDisplay.js","sources":["pages/home/ph/addWatermark/components/MapDisplay.vue","/Users/pq/code/ph/pages/home/ph/addWatermark/components/MapDisplay.vue?type=component"],"sourcesContent":["<!-- 导入地图 -->\n<template>\n\t<view class=\"content\">\n\t\t<!-- 新增搜索容器 -->\n\t\t<view class=\"search-container\">\n\t\t\t<u-input v-model=\"searchKeyword\" placeholder=\"输入地址进行搜索\" @confirm=\"handleSearch\" />\n\t\t\t<u-button @click=\"handleSearch\">搜索</u-button>\n\t\t\t<u-button @click=\"closeMap\">确认</u-button>\n\t\t</view>\n\t\t<!-- 新增地址显示和搜索结果 -->\n\t\t<view class=\"info-box\" v-if=\"selectedAddress\">\n\t\t\t<text>{{ selectedAddress }}</text>\n\t\t</view>\n\t\t<view class=\"search-results\" v-if=\"results.length > 0\">\n\t\t\t<scroll-view scroll-y style=\"max-height: 200px;\">\n\t\t\t\t<view v-for=\"(item, index) in results\" :key=\"index\" class=\"result-item\" \n\t\t\t\t\t  @click=\"selectLocation(item)\">\n\t\t\t\t\t{{ item.title }}\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\t\t</view>\n\t\t<view class=\"wrapperBox\">\n\t\t\t<!-- <view id=\"wrapper\"></view> -->\n\t\t\t<map style=\"width:100%;height:100%;\" \n\t\t\t\t:latitude=\"latitude\" \n\t\t\t\t:longitude=\"longitude\" \n\t\t\t\t:scale=\"scale\"\n\t\t\t\t@tap=\"handleMapTap\" \n\t\t\t\t:markers=\"marker\" \n\t\t\t\t@markertap=\"toMap()\"/>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\nimport QQMapWX from '@/libs/qqmap-wx-jssdk'\n\nconst emits = defineEmits(['closeMap']); // 添加缺失的事件声明\n\nconst location = ref({})\nconst latitude = ref(30.254515) //纬度\nconst longitude = ref(120.11) //经度\nconst scale = ref(13) //地图缩放程度\n\nconst key = 'TINBZ-DRE6I-H7XGE-UG7XQ-UGPHH-4ZBR6'\nconst mapInstance = ref(null)\nlet qqmapsdk = null\n\n// 新增响应式数据\nconst searchKeyword = ref('')\nconst results = ref([])\nconst selectedAddress = ref('')\nconst currentMarker = ref(null) // 新增标记实例\nconst marker = ref([]) // 新增标记数组\n\n// 关闭地图\nconst closeMap = (item) => {\n  emits('closeMap',item || location.value)\n}\n\n// 生命周期钩子\nonMounted(() => {\n  qqmapsdk = new QQMapWX({\n    key: key  //申请的key\n  });\n\t// 定位请求\n\tgetLocation()\n})\n\nonBeforeUnmount(() => {\n\tif (mapInstance.value) {\n\t\tmapInstance.value.destroy()\n\t}\n\tdelete window.mapInit\n})\n\n// 方法\nconst loadScript = () => {\n  // // 动态加载腾讯地图SDK\n\t// const script = document.createElement('script')\n\t// script.src = `https://map.qq.com/api/gljs?v=1.exp&key=${key}&libraries=visualization&callback=mapInit`\n\t// script.onerror = () => {\n\t// \tconsole.error('地图脚本加载失败')\n\t// }\n\t// document.body.appendChild(script)\n\n  // mapInit()\n}\n\n// 新增搜索方法\nconst handleSearch = async () => {\n    if (!searchKeyword.value) return\n    try {\n        qqmapsdk.search({\n            keyword: searchKeyword.value,\n            region: '全国',\n            page_size: 20,\n            keyword_auto_complete: 1,\n            address_format: 'short',\n            filter: 'category=地址',\n            success: function(res) {\n              console.log('res',res)\n              if (res.status === 0 && res.data) {\n                const uniqueResults = new Map();\n                results.value = res.data.filter(item => {\n                  const key = `${item.location.lat},${item.location.lng}`;\n                  return !uniqueResults.has(key) && uniqueResults.set(key, true);\n                }).map(item => ({\n                    title: item.title.replace(/<[^>]+>/g, ''),\n                    lat: item.location.lat,\n                    lng: item.location.lng\n                }))\n                if(results.value.length === 0) {\n                    uni.showToast({ \n                        title: res.message === 'query params error' \n                            ? '请输入更详细的关键词' \n                            : '未找到相关地址', \n                        icon: 'none' \n                    })\n                }\n            }\n          }\n        })\n    } catch (error) {\n        console.error('搜索失败:', error)\n        uni.showToast({ title: '搜索失败：' + error.message, icon: 'none' })\n    }\n}\nconst getLocation = () => {\n  uni.authorize({\n    scope: 'scope.userLocation',\n    success() {\n      let location = {\n        longitude: longitude.value,\n        latitude: latitude.value,\n        province: \"\",\n        city: \"\",\n        area: \"\",\n        street: \"\",\n        address: \"\",\n      };\n      uni.getLocation({\n        type: 'gcj02',\n        geocode: true,\n        success: function(res) {\n          uni.setStorageSync('location', {\n            latitude: latitude.value,\n            longitude: longitude.value\n          });\n\n          longitude.value = res.longitude;\n          latitude.value = res.latitude;\n\n          location.longitude = res.longitude;\n          location.latitude = res.latitude;\n    \n          qqmapsdk.reverseGeocoder({\n            location,\n            success: function(res) {\n                let info = res.result;\n                location.province = info.address_component.province;\n                location.city = info.address_component.city;\n                location.area = info.address_component.district;\n                location.street = info.address_component.street;\n                location.address = info.address;\n                location.value = location\n            },\n          });\n        },\n        fail: function(err) {\n          console.log(err,'err')\n          // 新增IP定位备选方案\n          qqmapsdk.geocoder({\n            geocoder: 1, // 1表示IP定位\n            success: (res) => {\n              const location = res.result.location\n              longitude.value = location.lng\n              latitude.value = location.lat\n              \n              qqmapsdk.reverseGeocoder({\n                location,\n                success: function(res) {\n                  let info = res.result;\n                  uni.setStorageSync('location', {\n                    latitude: location.lat,\n                    longitude: location.lng\n                  });\n                  uni.showToast({\n                    title: '已使用IP定位',\n                    icon: 'none'\n                  })\n                }\n              });\n            },\n            fail: (err) => {\n              uni.showToast({\n                title: '定位失败，请手动选择位置',\n                icon: 'none'\n              })\n            }\n          })\n        }\n      })\n    },\n    fail() {\n      uni.showToast({\n        title: '需要位置权限才能使用该功能',\n        icon: 'none'\n      })\n    }\n  })\n}\n// 新增标记更新方法\nconst updateMarker = (lat, lng) => {\n    // 使用uni-app原生map组件方式更新标记\n    marker.value = [{\n        id: 1,\n        latitude: lat,\n        longitude: lng,\n        iconPath: '/static/location.png', // 需要准备标记图标\n        width: 30,\n        height: 30\n    }]\n}\n\n// 新增选择位置方法\nconst selectLocation = (item) => {\n    // 更新地图中心坐标到选中位置\n    latitude.value = item.lat\n    longitude.value = item.lng\n    console.log('item',item)\n    // 更新标记位置\n    updateMarker(item.lat, item.lng)\n    // 获取并显示详细地址\n    qqmapsdk.reverseGeocoder({\n        location: { latitude: item.lat, longitude: item.lng },\n        success: function(res) {\n            const info = res.result\n            selectedAddress.value = info.address\n            location.value = {\n                longitude: item.lng,\n                latitude: item.lat,\n                province: info.address_component.province,\n                city: info.address_component.city,\n                area: info.address_component.district,\n                street: info.address_component.street,\n                address: info.address\n            }\n        }\n    })\n    results.value = []\n    searchKeyword.value = ''\n}\n\n// 新增地图点击处理方法\nconst handleMapTap = (e) => {\n  const { latitude, longitude } = e.detail\n  location.value = {\n    longitude,\n    latitude,\n    province: \"\",\n    city: \"\",\n    area: \"\",\n    street: \"\",\n    address: \"\",\n  }   \n  qqmapsdk.reverseGeocoder({\n    location: { latitude, longitude },\n    success: function(res) {\n      const info = res.result\n      selectedAddress.value = info.address\n      location.value = {\n        ...location.value,\n        province: info.address_component.province,\n        city: info.address_component.city,\n        area: info.address_component.district,\n        street: info.address_component.street,\n        address: info.address\n      }\n\n      // 新增确认弹窗\n      uni.showModal({\n        title: '确认位置',\n        content: `是否选择当前位置：${info.address}`,\n        success: function(res2) {\n          if (res2.confirm) {\n            // 更新标记位置\n            // updateMarker(latitude, longitude)\n            // 自动触发确认（如果需要自动关闭地图）\n            closeMap(location.value)\n          }\n        }\n      })\n    },\n    fail: function(err) {\n      console.error('逆地理编码失败:', err)\n    }\n  })\n}\n</script>\n\n<style>\n\t.content {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t\n\t.wrapperBox {\n\t\tposition: relative;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n    z-index: 999;\n\t\toverflow: hidden; /* 添加防止滚动条 */\n\t}\n\n\t#wrapper {\n\t\twidth: 100%;  /* 修改为百分比布局 */\n\t\theight: 100%;\n\t\ttop: 0;      /* 调整定位 */\n\t\tleft: 0;\n\t}\n\n\t/* 新增搜索框样式 */\n\t.search-container {\n\t\tposition: absolute;\n\t\ttop: 90px;\n\t\tleft: 10px;\n\t\tz-index: 1000;\n\t\tbackground: rgba(255, 255, 255, 0.9);\n\t\tpadding: 10px;\n\t\tborder-radius: 8px;\n\t\tbox-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n\t\tdisplay: flex;\n\t\tgap: 8px;\n\t\t/* width: 300px; */\n\t}\n\n\t/* .search-container input {\n\t\tflex: 1;\n\t} */\n\n\t.search-container button {\n    width: 60px !important;\n\t\t/* background: #007aff;\n\t\tcolor: white;\n\t\tborder: none;\n\t\tpadding: 8px 12px;\n\t\tborder-radius: 4px;\n\t\tfont-size: 14px;\n\t\tcursor: pointer; */\n\t}\n\n\t.info-box {\n\t\tposition: absolute;\n\t\tbottom: 20px;\n\t\tleft: 20px;\n\t\tz-index: 1000;\n\t\tbackground: rgba(255, 255, 255, 0.9);\n\t\tpadding: 10px;\n\t\tborder-radius: 8px;\n\t\tbox-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n\t\tmax-width: 300px;\n\t}\n\n\t.search-results {\n\t\tposition: absolute;\n    top: 150px;\n    left: 10px;\n\t\tz-index: 1000;\n\t\tbackground: white;\n\t\twidth: 300px;\n\t\tborder-radius: 8px;\n\t\tbox-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n\t}\n\n\t.result-item {\n\t\tpadding: 10px;\n\t\tborder-bottom: 1px solid #eee;\n\t\tcursor: pointer;\n\t}\n\n\t.result-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\n\t.result-item:hover {\n\t\tbackground-color: #f5f5f5;\n\t}\n</style>\n","import Component from '/Users/pq/code/ph/pages/home/ph/addWatermark/components/MapDisplay.vue'\nwx.createComponent(Component)"],"names":["ref","onMounted","QQMapWX","onBeforeUnmount","uni","key","location","res","err","latitude","longitude","Component"],"mappings":"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"}