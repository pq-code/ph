{"version":3,"file":"addWatermark.js","sources":["pages/home/ph/addWatermark/addWatermark.vue","pages/home/ph/addWatermark/addWatermark.vue?type=page"],"sourcesContent":["<script setup>\r\nimport page from \"@/components/pages/page.vue\";\r\nimport { ref,onMounted } from 'vue'\r\nimport { useImageHandler } from './hooks/useImageHandler'\r\nimport { useWatermark } from './hooks/useWatermark'\r\nimport { useWatermarkForm } from './hooks/useWatermarkForm'\r\nimport { WATERMARK_TYPES, WATERMARK_FORM_LIST } from './components/watermarkConfig'\r\nimport WatermarkTypeSelector from './components/WatermarkTypeSelector.vue'\r\nimport WatermarkForm from './components/WatermarkForm.vue'\r\n\r\nconst watermarkType = ref(1)\r\nconst currentStyle = ref(WATERMARK_TYPES[0])\r\n\r\nconst { imageInfo, isProcessing, handleImageSelect } = useImageHandler()\r\nconst { addWatermark } = useWatermark('watermark')\r\nconst { formData, getFormFields, validateForm, resetForm } = useWatermarkForm()\r\n\r\nonMounted(async () => {\r\n  try {\r\n    // 获取容器尺寸（带错误处理）\r\n    const containerRect = await new Promise((resolve, reject) => {\r\n      const query = uni.createSelectorQuery()\r\n      query.select('.preview-wrapper')\r\n        .boundingClientRect(data => {\r\n          if (!data) {\r\n            reject(new Error('未能获取容器尺寸'))\r\n            return\r\n          }\r\n          resolve(data)\r\n        }).exec()\r\n    })\r\n\r\n    // 设置画布尺寸（封装为独立函数）\r\n    const setCanvasDimensions = (width, height) => {\r\n      imageInfo.value.canvasWidth = width\r\n      imageInfo.value.canvasHeight = height\r\n    }\r\n    \r\n    setCanvasDimensions(containerRect.width, containerRect.height)\r\n    console.log('容器初始化完成，尺寸：', containerRect)\r\n\r\n  } catch (error) {\r\n    console.error('容器初始化失败:', error)\r\n    uni.showToast({\r\n      title: '初始化失败，请重试',\r\n      icon: 'none'\r\n    })\r\n  }\r\n})\r\n\r\n\r\n\r\n// 处理水印类型变化\r\nconst handleTypeChange = (item) => {\r\n\tconsole.log('style',item)\r\n\tcurrentStyle.value = item\r\n\twatermarkType.value = item.id\r\n\tif (imageInfo.value) {\r\n\t\tupdateWatermark()\r\n\t}\r\n}\r\n// 更新水印\r\nconst updateWatermark = async () => {\r\n  console.log('formData', formData.value);\r\n  \r\n  if (!imageInfo.value || !imageInfo.value.path || !currentStyle.value) return;\r\n \r\n  try {\r\n    // 缓存 image 信息\r\n    const info = imageInfo.value;\r\n\r\n    // 添加水印\r\n    await addWatermark({\r\n      image: info,\r\n      style: currentStyle.value,\r\n      info: formData.value\r\n    });\r\n\r\n    // 定义常量，用于调整截取区域的偏移和尺寸\r\n    const OFFSET = 0.2;\r\n    const SIZE_ADJUSTMENT = 0.5;\r\n    const { x, y, drawWidth, drawHeight } = info;\r\n\r\n    // 生成图片供预览\r\n    const { tempFilePath } = await uni.canvasToTempFilePath({\r\n      canvasId: 'watermark',\r\n      fileType: 'png', // PNG 格式保证无损\r\n      quality: 1,      // 图片质量最高\r\n      x: x + OFFSET,   // 左上角 x 坐标偏移\r\n      y: y + OFFSET,   // 左上角 y 坐标偏移\r\n      width: drawWidth - SIZE_ADJUSTMENT, // 宽度调整\r\n      height: drawHeight - SIZE_ADJUSTMENT // 高度调整\r\n    });\r\n\r\n    console.log('生成图片成功', tempFilePath);\r\n    info.url = tempFilePath;\r\n\r\n    // 清空画布：先获取画布上下文，然后清空画布（可选：调用 draw() 来立即更新显示）\r\n    const canvasContext = uni.createCanvasContext('watermark');\r\n    canvasContext.clearRect(0, 0, info.canvasWidth, info.canvasHeight);\r\n    canvasContext.draw();\r\n\r\n  } catch (error) {\r\n    console.error('更新水印出错', error);\r\n    uni.showToast({\r\n      title: '更新水印出错',\r\n      icon: 'none'\r\n    });\r\n  }\r\n};\r\n// 处理图片选择\r\nconst onImageSelect = async () => {\r\n  if (isProcessing.value) return\r\n  const image = await handleImageSelect()\r\n  if (image) {\r\n    await updateWatermark() // 更新水印\r\n  }\r\n}\r\n\r\n// 生成最终图片\r\nconst generateImage = async () => {\r\n  if (!imageInfo.value) {\r\n    uni.showToast({\r\n      title: '请先选择图片',\r\n      icon: 'none'\r\n    })\r\n    return\r\n  }\r\n  try {\r\n    const { x, y, drawWidth, drawHeight } = imageInfo.value;\r\n    console.log(imageInfo.value.url)\r\n    const tempFilePath = imageInfo.value.url\r\n    // const { tempFilePath } = await uni.canvasToTempFilePath({\r\n    //   canvasId: 'watermark',\r\n    //   fileType: 'png', // 使用 PNG 格式以保证无损\r\n    //   quality: 1, // 设置图片质量为最高\r\n    //   x: x + 0.1, // 截取区域的左上角 x 坐标\r\n    //   y: y + 0.1, // 截取区域的左上角 y 坐标\r\n    //   width: drawWidth - 0.5, // 截取区域的宽度，使用图片实际绘制的宽度\r\n    //   height: drawHeight - 0.5 // 截取区域的高度，使用图片实际绘制的高度\r\n    // });\r\n\r\n    console.log('生成图片成功', tempFilePath);\r\n    uni.showToast({\r\n      title: '生成图片成功',\r\n      icon: 'success'\r\n    });\r\n\r\n    // 预览图片\r\n    uni.previewImage({\r\n      urls: [tempFilePath],\r\n      longPressActions: {\r\n        itemList: ['保存图片'],\r\n        success: function (data) {\r\n          if (data.tapIndex === 0) {\r\n            // 保存图片到相册\r\n            uni.saveImageToPhotosAlbum({\r\n              filePath: tempFilePath,\r\n              success: function () {\r\n                uni.showToast({\r\n                  title: '保存成功',\r\n                  icon: 'success'\r\n                });\r\n              },\r\n              fail: function (err) {\r\n                console.error('保存失败', err);\r\n                uni.showToast({\r\n                  title: '保存失败',\r\n                  icon: 'none'\r\n                });\r\n              }\r\n            });\r\n          }\r\n        },\r\n        fail: function (err) {\r\n          console.error('长按操作失败', err);\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('生成图片出错', error);\r\n    uni.showToast({\r\n      title: '生成图片出错',\r\n      icon: 'none'\r\n    });\r\n  }\r\n};\r\n\r\n// 创建响应式数据  \r\nconst show = ref(false);  \r\n  \r\n// 定义方法  \r\nfunction open() {  \r\n  // 打开逻辑，比如设置 show 为 true  \r\n  show.value = true;  \r\n  // console.log('open');  \r\n}  \r\n  \r\nfunction closePopup() {  \r\n  // 关闭逻辑，设置 show 为 false  \r\n  show.value = false;  \r\n  updateWatermark() // 更新水印\r\n  // console.log('close');  \r\n}  \r\n\r\n</script>\r\n\r\n<template>\r\n  <page\r\n    title=\"添加水印\"\r\n    rButton=\"生成图片\"\r\n    lButton=\"编辑\" \r\n    :rButtonDisabled=\"isProcessing\"\r\n    @rButton=\"generateImage\"\r\n    @lButton=\"show = true\"\r\n  >\r\n    <view class=\"content\">\r\n      <!-- 预览区域：用于展示生成的图片或占位提示 -->\r\n      <view class=\"preview-wrapper\" @click=\"onImageSelect\">\r\n        <u-image \r\n          v-if=\"imageInfo?.url\" \r\n          class=\"preview-image\"\r\n          :src=\"imageInfo?.url\" \r\n          mode=\"aspectFit\"\r\n          :lazy-load=\"true\" \r\n          :fade=\"true\" \r\n          :show-menu-by-longpress=\"true\"\r\n          :width= \"imageInfo?.canvasWidth + 'px'\"\r\n          :height= \"imageInfo?.canvasHeight + 'px'\"\r\n        ></u-image>\r\n        <view v-else class=\"placeholder\">\r\n          <u-icon name=\"camera-fill\" size=\"40\" color=\"#999\"></u-icon>\r\n          <text class=\"placeholder-text\">点击选择图片</text>\r\n        </view>\r\n      </view>\r\n      \r\n      <!-- 隐藏的 canvas：仅用于生成图片 -->\r\n      <canvas \r\n        class=\"hidden-canvas\"\r\n        canvas-id=\"watermark\"\r\n        :style=\"{\r\n          width: imageInfo?.canvasWidth + 'px',\r\n          height: imageInfo?.canvasHeight + 'px'\r\n        }\"\r\n      />\r\n      \r\n      <!-- 水印类型选择器 -->\r\n      <WatermarkTypeSelector\r\n        v-model=\"watermarkType\"\r\n        @handleTypeChange=\"handleTypeChange\"\r\n      />\r\n      \r\n    </view>\r\n\r\n    <u-popup \r\n      :show=\"show\" \r\n      mode=\"bottom\"  \r\n      @close=\"closePopup\"\r\n      @open=\"open\"\r\n      :closeable=\"false\"\r\n      :overlay=\"true\"\r\n      :safeAreaInsetBottom=\"true\"\r\n      :round=\"7\">\r\n      <view class=\"popup-content\">\r\n        <u-button @click=\"closePopup\">确定</u-button>\r\n        <!-- 表单区域 -->\r\n        <WatermarkForm\r\n          v-if=\"currentStyle\"\r\n          v-model=\"formData\"\r\n          :fields=\"WATERMARK_FORM_LIST[currentStyle.id]\"\r\n          :disabled=\"isProcessing\"\r\n        />\r\n     </view>\r\n    </u-popup>\r\n  </page>\r\n\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n.content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  padding: 10px;\r\n  background: #e6e6e6;\r\n  height: 100%;\r\n  overflow-y: hidden;\r\n}\r\n\r\n/* 预览区域样式 */\r\n.preview-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 450px;  // 降低最小高度\r\n  max-height: 70vh;   // 根据视口高度限制\r\n  background: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;  // 隐藏溢出部分\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1); // 添加投影\r\n}\r\n/* 隐藏 canvas */\r\n.hidden-canvas {\r\n  position: absolute;\r\n  top: -700px;\r\n  left: 10px;\r\n  width: 100%;\r\n  height: 100%;\r\n  // background: #904b4b;\r\n  pointer-events: none;\r\n  // display: none;\r\n}\r\n\r\n/* 预览图片样式 */\r\n.preview-image {\r\n  width: auto;\r\n  height: auto;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  transition: transform 0.3s ease; // 添加缩放动画\r\n  object-fit: contain;\r\n  flex-shrink: 0;\r\n}\r\n\r\n/* 占位提示样式 */\r\n.placeholder {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.placeholder-text {\r\n  font-size: 14px;\r\n  color: #999;\r\n}\r\n\r\n.popup-content {\r\n  padding-top: 30px;\r\n}\r\n\r\n</style>\r\n","import MiniProgramPage from '/Users/pq/code/ph/pages/home/ph/addWatermark/addWatermark.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","WATERMARK_TYPES","useImageHandler","useWatermark","useWatermarkForm","onMounted","uni"],"mappings":"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"}