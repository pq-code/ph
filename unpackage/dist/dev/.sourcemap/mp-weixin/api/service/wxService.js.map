{"version":3,"file":"wxService.js","sources":["api/service/wxService.js"],"sourcesContent":["import { getSetting, getLoginFn, showToast } from \"@/utils/index.js\";\nimport { errTips } from '../error/errTips';\n\n// let baseURL = 'http://localhost:4005/'\n\nlet baseURL = 'https://pqartstation.cn/'\n\nlet token = uni.getStorageSync('token')\n\nexport const wxService = (urls, config, method) => {\n\n    // if (urls.indexOf('wx/users') !== -1) {\n    //     baseURL = 'https://pqartstation.cn:4005/'\n    // } else {\n    //     baseURL = 'https://pqartstation.cn:3005/'\n    // }\n\n    let url = baseURL + urls\n\n    let data = {\n        provider: 'weixin', // 微信登录标识\n        ...config\n    }\n\n    let header\n\n    if (method == \"POST\") {\n        header = {\n            'content-type': \"application/x-www-form-urlencoded\"\n        };\n    } else {\n        header = {\n            'content-type': \"application/json\"\n        };\n    }\n    if (token) {\n        header.Authorization = token;\n    }\n\n    return new Promise((resolve, reject) => {\n        uni.request({\n            url: url,\n            method: method,\n            header: Object.assign({}, header),\n            data: data,\n            dataType: 'json',\n            timeout: 1000 * 60 * 1,\n            success: (data) => {\n                const res = data.data\n                if (res.code == 0) {\n                    resolve(res)\n                } else if (res.error == '10101') {\n                    showToast('token已过期重新登录');\n\t\t\t\t\t   getLoginFn().then((res) => {\n\t\t\t\t\t\t   console.log(\"res\", res);\n\t\t\t\t\t   });\n                } else {\n                    showToast(errTips[res.code] || res.message || '未知错误');\n                }\n            },\n            fail: (err) => {\n                // 处理 HTTP 网络错误\n                let message = '';\n                // HTTP 状态码\n                switch (err) {\n                    case 401:\n                        message = 'token 失效，请重新登录';\n                        // 这里可以触发退出的 action\n                       getLoginFn().then((res) => {\n                           console.log(\"res\", res);\n                       });\n                        break;\n                    case 403:\n                        message = '拒绝访问';\n                        break;\n                    case 404:\n                        message = '请求地址错误';\n                        break;\n                    case 500:\n                        message = '服务器故障';\n                        break;\n                    default:\n                        message = '网络连接故障';\n                }\n                showToast(message);\n                reject(err)\n            },\n            complete: () => {\n                uni.hideLoading();\n            },\n        })\n    })\n}\n"],"names":["uni","data","showToast","getLoginFn","res","errTips"],"mappings":";;;;AAKA,IAAI,UAAU;AAEd,IAAI,QAAQA,cAAAA,MAAI,eAAe,OAAO;AAE1B,MAAC,YAAY,CAAC,MAAM,QAAQ,WAAW;AAQ/C,MAAI,MAAM,UAAU;AAEpB,MAAI,OAAO;AAAA,IACP,UAAU;AAAA;AAAA,IACV,GAAG;AAAA,EACN;AAED,MAAI;AAEJ,MAAI,UAAU,QAAQ;AAClB,aAAS;AAAA,MACL,gBAAgB;AAAA,IAC5B;AAAA,EACA,OAAW;AACH,aAAS;AAAA,MACL,gBAAgB;AAAA,IAC5B;AAAA,EACK;AACD,MAAI,OAAO;AACP,WAAO,gBAAgB;AAAA,EAC1B;AAED,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpCA,kBAAAA,MAAI,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA,QAAQ,OAAO,OAAO,CAAA,GAAI,MAAM;AAAA,MAChC;AAAA,MACA,UAAU;AAAA,MACV,SAAS,MAAO,KAAK;AAAA,MACrB,SAAS,CAACC,UAAS;AACf,cAAM,MAAMA,MAAK;AACjB,YAAI,IAAI,QAAQ,GAAG;AACf,kBAAQ,GAAG;AAAA,QAC/B,WAA2B,IAAI,SAAS,SAAS;AAC7BC,sBAAS,UAAC,cAAc;AACpCC,iCAAY,EAAC,KAAK,CAACC,SAAQ;AAC1BJ,0BAAY,MAAA,MAAA,OAAA,kCAAA,OAAOI,IAAG;AAAA,UAC/B,CAAS;AAAA,QACT,OAAuB;AACHF,sBAAS,UAACG,kBAAO,QAAC,IAAI,IAAI,KAAK,IAAI,WAAW,MAAM;AAAA,QACvD;AAAA,MACJ;AAAA,MACD,MAAM,CAAC,QAAQ;AAEX,YAAI,UAAU;AAEd,gBAAQ,KAAG;AAAA,UACP,KAAK;AACD,sBAAU;AAEXF,mCAAY,EAAC,KAAK,CAAC,QAAQ;AACvBH,iFAAY,OAAO,GAAG;AAAA,YACjD,CAAwB;AACA;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,UACJ;AACI,sBAAU;AAAA,QACjB;AACDE,oBAAS,UAAC,OAAO;AACjB,eAAO,GAAG;AAAA,MACb;AAAA,MACD,UAAU,MAAM;AACZF,sBAAG,MAAC,YAAW;AAAA,MAClB;AAAA,IACb,CAAS;AAAA,EACT,CAAK;AACL;;"}